#include "readerwriterlock.h"

ReaderWriterLock::ReaderWriterLock():mutexReaders(1), mutexWriters(1), writer(1),
reader(1), mutex(1), nbReaders(0), nbWriters(0)
{

}

/**
 * @brief ReaderWriterLock::lockReading
 */
void ReaderWriterLock::lockReading() {
    mutexReaders.acquire();
    reader.acquire();
    mutex.acquire();
    nbReaders++;

    if (nbReaders==1){
        writer.acquire();
    }

    mutex.release();
    reader.release();
    mutexReaders.release();
}

/**
 * @brief ReaderWriterLock::unlockReading
 */
void ReaderWriterLock::unlockReading() {
    mutex.acquire();
    nbReaders -= 1;

    if (nbReaders==0){
       writer.release();
    }

    mutex.release();
}

/**
 * @brief ReaderWriterLock::lockWriting
 */
void ReaderWriterLock::lockWriting() {
    mutexWriters.acquire();
    nbWriters++;

    if (nbWriters==1){
       reader.acquire();
    }

    mutexWriters.release();
    writer.acquire();
}

/**
 * @brief ReaderWriterLock::unlockWriting
 */
void ReaderWriterLock::unlockWriting() {
    writer.release();
    mutexWriters.acquire();
    nbWriters -= 1;

    if (nbWriters==0){
        reader.release();
    }

    mutexWriters.release();
}
